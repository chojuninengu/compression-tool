name: Docker Build and Push Compressors

on:
  push:
    branches: [main]

jobs:
  build-and-push-js_image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push JS Compressor
        uses: docker/build-push-action@v5
        with:
          context: ./js
          file: ./js/Dockerfile
          push: ${{ github.event_name == 'push' }}
          tags: ghcr.io/chojuninengu/compression-tool-js:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          build-args: |
            BUILDKIT_INLINE_CACHE=1

  build-and-push-rs_image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Rust Compressor
        uses: docker/build-push-action@v5
        with:
          context: ./rust
          file: ./rust/Dockerfile
          push: ${{ github.event_name == 'push' }}
          tags: ghcr.io/chojuninengu/compression-tool-rs:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          build-args: |
            BUILDKIT_INLINE_CACHE=1
